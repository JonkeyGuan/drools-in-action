package com.droolsinaction.fibonacci;

dialect "mvel"

rule Recurse
    salience 10
    when
        f : Fibonacci ( value == -1 )
        not ( Fibonacci ( sequence == 1 ) )    
    then
        insert( new Fibonacci( f.sequence - 1 ) );
        System.out.println( "recurse for " + f.sequence );
end

rule Bootstrap
    when
        f : Fibonacci( sequence == 1 || == 2, value == -1 ) 
    then 
        modify ( f ){ value = 1 };
        System.out.println( f.sequence + " -> " + f.value );
end

rule Calculate
    when
        f1 : Fibonacci( s1 : sequence, value != -1 ) 
        f2 : Fibonacci( sequence == (s1 + 1 ), value != -1 )
        f3 : Fibonacci( s3 : sequence == (f2.sequence + 1 ), value == -1 )              
    then    
        modify ( f3 ) { value = f1.value + f2.value };
        System.out.println( s3 + " -> " + f3.value ); 
end 
